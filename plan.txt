Update the **Schedule** module only and bring every event-type reference into a single, consistent contract that matches how the project’s schedule settings already work. Treat an event type as exactly: `label` (string, required), `description` (text, nullable), `color` (a stored color value you already use, e.g., hex or token), and `tailwind_classes` (string of classes used to render chips/cells). Audit the entire Schedule feature—models, migrations, seeders/factories, Livewire components, Blade views, validation rules, and the in-app **Settings → Event Types** UI—and replace any older or divergent fields like `name`, `code`, `bg_color`, `text_color`, `badge`, or ad-hoc style flags with the canonical four fields above. Create safe, reversible migrations to rename or add/drop columns as needed, backfill `label/description/color/tailwind_classes` from the legacy fields without losing data, and keep foreign keys and existing IDs intact so any `schedules` rows that reference event types continue to work. Refactor the `ScheduleEventType` model to expose only these attributes (fillable/casts), update the `Schedule` model and any calendar rendering to read `color` and `tailwind_classes` for display, and ensure remarks on schedule entries remain unaffected. Align the Settings management screens to create/edit event types using this contract, enforce validation accordingly, and standardize how the calendar cells pick up styling (read from `tailwind_classes`, not hardcoded palettes). Remove dead code paths and constants that duplicate styling or old keys, and fix any seeders/factories so they populate event types with `label`, `description`, `color`, and `tailwind_classes` only, idempotently. Verify route middleware and policies continue to use the existing `schedules.*` and `schedule-event-types.*` permissions without introducing new scopes, and do not touch any non-schedule modules. When finished, commit the code with the new migrations, updated models/components/views/seeders, and a short summary of what changed; no markdown guide is required—just perform the change and keep the scope strictly to **Schedule** and **Schedule Event Types**.
