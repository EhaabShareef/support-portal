In app/Services/Tickets/TicketMergeService.php around lines 19 to 22, the ticket selection uses whereIn(...)->get() which returns rows in undefined order causing nondeterministic choice of the “base” ticket and increasing deadlock risk; change the query to lock and order deterministically (e.g., lockForUpdate()->orderBy('id')->get()) or, if you need to preserve the incoming $ticketIds order for selecting the base, use a DB-specific ordering (e.g., FIELD(...) on MySQL or use a CASE expression) so the same ticket is always chosen and locks are acquired in a consistent sequence; additionally consider setting a merging flag on the target ticket(s) while holding the lock (and enforcing that flag in message/note creation paths) or require those paths to perform SELECT ... FOR UPDATE to prevent concurrent message insertion during the merge.